// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// Transaction3DSClientRequest Transaction3DSClientRequest
// swagger:model Transaction3DSClientRequest
type Transaction3DSClientRequest struct {

	// amount
	Amount *float64 `json:"amount,omitempty"`

	// card number
	CardNumber *string `json:"cardNumber,omitempty"`

	// cardholder name
	CardholderName *string `json:"cardholderName,omitempty"`

	// expiration month
	ExpirationMonth *float64 `json:"expirationMonth,omitempty"`

	// expiration year
	ExpirationYear *float64 `json:"expirationYear,omitempty"`

	// reference
	Reference *string `json:"reference,omitempty"`

	// security code
	SecurityCode *string `json:"securityCode,omitempty"`

	// three d secure
	ThreeDSecure *ThreeDSecureClient `json:"threeDSecure,omitempty"`
}

// Validate validates this transaction3 d s client request
func (m *Transaction3DSClientRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateThreeDSecure(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Transaction3DSClientRequest) validateThreeDSecure(formats strfmt.Registry) error {

	if swag.IsZero(m.ThreeDSecure) { // not required
		return nil
	}

	if m.ThreeDSecure != nil {
		if err := m.ThreeDSecure.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("threeDSecure")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Transaction3DSClientRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Transaction3DSClientRequest) UnmarshalBinary(b []byte) error {
	var res Transaction3DSClientRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
